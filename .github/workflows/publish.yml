name: Publish to GitHub Packages

on:
  push:
    branches: [ main ]
    paths:
      - 'releases/**'
      - 'pom.xml'
  release:
    types: [published]
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Configure Maven settings
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        server-id: github
        server-username: GITHUB_ACTOR
        server-password: GITHUB_TOKEN

    - name: Determine release directory, JAR and version
      id: rel
      run: |
        set -e
        # Most recent release directory (by mtime)
        REL_DIR="$(ls -td releases/*/ 2>/dev/null | head -1 | sed 's:/*$::')"
        if [ -z "$REL_DIR" ]; then
          echo "‚ùå No release directory found under releases/"
          exit 1
        fi
        FOLDER_TS="$(basename "$REL_DIR")"

        # JAR path (first jar in that folder)
        JAR_PATH="$(ls "$REL_DIR"/*.jar 2>/dev/null | head -1 || true)"
        if [ ! -f "$JAR_PATH" ]; then
          echo "‚ùå No JAR found under $REL_DIR"
          exit 1
        fi

        # Version selection: prefer release_version.txt, otherwise compose pom_version + "_" + folder timestamp
        if [ -f "$REL_DIR/release_version.txt" ]; then
          VERSION="$(tr -d ' \r\n' < "$REL_DIR/release_version.txt")"
        else
          if [ -f "$REL_DIR/pom_version.txt" ]; then
            POM_VERSION="$(tr -d ' \r\n' < "$REL_DIR/pom_version.txt")"
          else
            POM_VERSION="0.0.0"
          fi
          VERSION="${POM_VERSION}_${FOLDER_TS}"
        fi

        echo "Release directory: $REL_DIR"
        echo "Folder timestamp:  $FOLDER_TS"
        echo "JAR:               $JAR_PATH"
        echo "Version to publish: $VERSION"

        echo "rel_dir=$REL_DIR" >> $GITHUB_OUTPUT
        echo "folder_ts=$FOLDER_TS" >> $GITHUB_OUTPUT
        echo "jar_path=$JAR_PATH" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Validate JAR file exists
      run: |
        if [ ! -f "${{ steps.rel.outputs.jar_path }}" ]; then
          echo "‚ùå Error: JAR file not found at ${{ steps.rel.outputs.jar_path }}"
          exit 1
        fi
        echo "‚úÖ JAR file found: ${{ steps.rel.outputs.jar_path }}"

    - name: Get JAR file info
      id: jar-info
      run: |
        JAR_SIZE=$(stat -c%s "${{ steps.rel.outputs.jar_path }}")
        JAR_SIZE_MB=$(echo "scale=2; $JAR_SIZE / 1024 / 1024" | bc)
        echo "jar-size=$JAR_SIZE_MB MB" >> $GITHUB_OUTPUT

    - name: Publish to GitHub Packages
      run: |
        echo "üì¶ Publishing Spring MCP Distribution to GitHub Packages..."
        echo "  Group ID: com.ab_tools"
        echo "  Artifact ID: spring-mcp-starter-dist"
        echo "  Version: ${{ steps.rel.outputs.version }}"
        echo "  File: ${{ steps.rel.outputs.jar_path }}"
        echo "  Size: ${{ steps.jar-info.outputs.jar-size }}"
        echo ""
        
        mvn deploy:deploy-file \
          -DgroupId=com.ab_tools \
          -DartifactId=spring-mcp-starter-dist \
          -Dversion=${{ steps.rel.outputs.version }} \
          -Dpackaging=jar \
          -Dfile=${{ steps.rel.outputs.jar_path }} \
          -DrepositoryId=github \
          -Durl=https://maven.pkg.github.com/${{ github.repository }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create deployment summary
      if: success()
      run: |
        echo "## üéâ Deployment Successful!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üì¶ Package Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Group ID**: com.ab_tools" >> $GITHUB_STEP_SUMMARY
        echo "- **Artifact ID**: spring-mcp-starter-dist" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: ${{ steps.rel.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **File Size**: ${{ steps.jar-info.outputs.jar-size }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üîó Links" >> $GITHUB_STEP_SUMMARY
        echo "- [üì¶ View Package](https://github.com/${{ github.repository }}/packages)" >> $GITHUB_STEP_SUMMARY
        echo "- [üìã Repository](https://github.com/${{ github.repository }})" >> $GITHUB_STEP_SUMMARY

    - name: Notify failure
      if: failure()
      run: |
        echo "## ‚ùå Deployment Failed!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "The package deployment to GitHub Packages failed. Please check the logs above for details." >> $GITHUB_STEP_SUMMARY
